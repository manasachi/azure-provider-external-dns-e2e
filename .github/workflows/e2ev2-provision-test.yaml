name: E2E Version 2 Provision and Test

on:
  workflow_call:
    inputs:
      ref:
        type: string
      skipRefCheck:
        type: boolean
        default: true
      name:
        type: string
        required: true

permissions:
  id-token: write

jobs:
  provision:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}

      - uses: actions/setup-go@v4
        with:
          go-version: '~1.20.3'
          cache-dependency-path: "**/*.sum"

      - name: Azure login
        uses: azure/login@v1.6.1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: 'Run Azure CLI commands'
        run: |
          az account show
          az group list
          pwd 

      - name: Provision Infrastructure
        shell: bash
        run: (go run ./main.go infra --subscription="${{ secrets.AZURE_SUBSCRIPTION_ID }}" --tenant="${{ secrets.AZURE_TENANT_ID }}" --names="${{ inputs.name }}" --infra-file="./infrafolder/infra.json")
        if: # avoids race condition security vulnerability by ensuring we are only running changes that were /ok-to-test'd
          (github.event_name == 'repository_dispatch' &&
          github.event.client_payload.slash_command.args.named.sha != '' &&
          contains(github.event.client_payload.pull_request.head.sha, github.event.client_payload.slash_command.args.named.sha)) ||
          inputs.skipRefCheck

      - name: Ensure ref
        uses: actions/github-script@v6
        if: ${{ !((github.event_name == 'repository_dispatch' && github.event.client_payload.slash_command.args.named.sha != '' && contains(github.event.client_payload.pull_request.head.sha, github.event.client_payload.slash_command.args.named.sha)) || inputs.skipRefCheck) }}
        with:
          script: core.setFailed('Ref is not latest')

      - name: Upload infra file
        uses: actions/upload-artifact@v4
        with:
          name: infra
          path: infrafolder/infra.json
  test:
    needs: provision
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - uses: actions/setup-go@v5
        with:
          go-version: '~1.20.3'

      - name: Azure login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: infra
          path: infrafolder/

      - name: Test
        shell: bash
        id: test
        run: (go run ./main.go test --infra-file="infrafolder/infra.json")
        if:
          (github.event_name == 'repository_dispatch' &&
          github.event.client_payload.slash_command.args.named.sha != '' &&
          contains(github.event.client_payload.pull_request.head.sha, github.event.client_payload.slash_command.args.named.sha)) ||
          inputs.skipRefCheck

      - name: Ensure ref
        uses: actions/github-script@v6
        if: ${{ !((github.event_name == 'repository_dispatch' && github.event.client_payload.slash_command.args.named.sha != '' && contains(github.event.client_payload.pull_request.head.sha, github.event.client_payload.slash_command.args.named.sha)) || inputs.skipRefCheck) }}
        with:
          script: core.setFailed('Ref is not latest')
